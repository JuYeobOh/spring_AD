package com.mysite.ADproject;

import java.time.LocalDateTime;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.transaction.annotation.Transactional;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Optional;
@SpringBootTest
class ADprojectApplicationTests {

    @Autowired
    private QuestionRepository questionRepository;

    @Test

    void testJpa() {
        // 데이터 삽입
        Question q1 = new Question();
        q1.setSubject("sbb가 무엇인가요?");
        q1.setContent("sbb에 대해서 알고 싶습니다.");
        q1.setCreateDate(LocalDateTime.now());
        this.questionRepository.save(q1);  // 첫번째 질문 저장

        Question q2 = new Question();
        q2.setSubject("스프링부트 모델 질문입니다.");
        q2.setContent("id는 자동으로 생성되나요?");
        q2.setCreateDate(LocalDateTime.now());
        this.questionRepository.save(q2);  // 두번째 질문 저장
        
        // 데이터 확인
        List<Question> allQuestions = this.questionRepository.findAll();
        assertEquals(2, allQuestions.size(), "There should be two questions in the database");

        Optional<Question> fetchedQuestion1 = this.questionRepository.findById(q1.getId());
        assertEquals(true, fetchedQuestion1.isPresent(), "The first question should be present in the database");
        assertEquals("sbb가 무엇인가요?", fetchedQuestion1.get().getSubject());

        Optional<Question> fetchedQuestion2 = this.questionRepository.findById(q2.getId());
        assertEquals(true, fetchedQuestion2.isPresent(), "The second question should be present in the database");
        assertEquals("스프링부트 모델 질문입니다.", fetchedQuestion2.get().getSubject());

    }
}
